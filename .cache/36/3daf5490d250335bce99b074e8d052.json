{"id":"BTdP","dependencies":[{"name":"D:\\CODE-20\\ACTIVE\\firestore-decorators\\tsconfig.json","includedInParent":true,"mtime":1593782772575},{"name":"D:\\CODE-20\\ACTIVE\\firestore-decorators\\package.json","includedInParent":true,"mtime":1593834995820},{"name":"../../types/types","loc":{"line":2,"column":27},"parent":"D:\\CODE-20\\ACTIVE\\firestore-decorators\\src\\components\\plugs\\listenDatabase.decorator.ts","resolved":"D:\\CODE-20\\ACTIVE\\firestore-decorators\\src\\types\\types.ts"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.listenDatabase=t,require(\"reflect-metadata\");var e=require(\"../../types/types\");function t(t){var r=t.dbType,a=t.listenerType,s=t.ref;return function(t,i){Reflect.defineMetadata(e.MetadataT.databaseListener,{dbType:r,listenerType:a,ref:s},t,i)}}"},"sourceMaps":{"js":{"mappings":[{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":0}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":13}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":20}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":35}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":43}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":56}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":57}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":64}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":68}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":76}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":91}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":93}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":121}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":125}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":127}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":135}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":156}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":1,"column":165}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":48,"column":31},"generated":{"line":1,"column":167}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":1,"column":170}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":1,"column":174}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":176}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":178}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":1,"column":185}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":50,"column":14},"generated":{"line":1,"column":187}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":50,"column":14},"generated":{"line":1,"column":189}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":1,"column":202}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":51,"column":5},"generated":{"line":1,"column":204}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":51,"column":5},"generated":{"line":1,"column":206}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":1,"column":210}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":1,"column":217}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":1,"column":226}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":53,"column":32},"generated":{"line":1,"column":228}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":1,"column":231}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":54,"column":12},"generated":{"line":1,"column":239}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":254}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":55,"column":16},"generated":{"line":1,"column":256}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":55,"column":16},"generated":{"line":1,"column":266}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":56,"column":6},"generated":{"line":1,"column":283}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":57,"column":8},"generated":{"line":1,"column":284}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":57,"column":14},"generated":{"line":1,"column":291}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":293}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":58,"column":20},"generated":{"line":1,"column":306}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":308}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":59,"column":11},"generated":{"line":1,"column":312}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":315}},{"source":"components/plugs/listenDatabase.decorator.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":317}}],"sources":{"components/plugs/listenDatabase.decorator.ts":"import \"reflect-metadata\";\r\nimport {\r\n  MetadataT,\r\n  DatabseListenersTypes,\r\n  DatabaseTypes,\r\n} from \"../../types/types\";\r\n\r\nexport type ListenDatabaseOptions = {\r\n  dbType: DatabaseTypes;\r\n  ref: string;\r\n  listenerType: DatabseListenersTypes;\r\n};\r\n\r\n/**\r\n * Decorator\r\n *\r\n * Create firestore/real-time database trigger\r\n * @example\r\n * class CitiesController {\r\n * listenDatabase({\r\n *  dbType: 'firestore',\r\n *  listenerType: 'onCreate',\r\n *  ref: '/cities/{cityId}',\r\n * })\r\n * async onCreateCity(snap, context) {}\r\n * }\r\n *\r\n * will be converted to:\r\n *\r\n * exports.onCreateCity = functions.firestore.document('/cities/{cityId}').onCreate((snap, context) => {});\r\n *\r\n * For real-time database:\r\n *\r\n * @example\r\n * class PresenceController {\r\n * listenDatabase({\r\n *  dbType: 'realtime',\r\n *  listenerType: 'onUpdate',\r\n *  ref: '/status/{userId}',\r\n * })\r\n * async listenStatusChange(snap, context) {}\r\n * }\r\n *\r\n * will be converted to:\r\n *\r\n * exports.listenStatusChange = functions.database.ref('/status/{userId}').onUpdate((snap, context) => {});\r\n */\r\nexport function listenDatabase({\r\n  dbType,\r\n  listenerType,\r\n  ref,\r\n}: ListenDatabaseOptions): MethodDecorator {\r\n  return (target: object | any, key: string | symbol) => {\r\n    Reflect.defineMetadata(\r\n      MetadataT.databaseListener,\r\n      {\r\n        dbType,\r\n        listenerType,\r\n        ref,\r\n      },\r\n      target,\r\n      key\r\n    );\r\n  };\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"589a54d54fd6ca3a561ce21f2bbf1c2b","cacheData":{"env":{}}}